int mul(int a, int b)
{
	return 1ll * a * b % mod;
}
int add(int a, int b)
{
	if (a + b >= mod) return a + b - mod;
	return a + b;
}
int sub(int a, int b)
{
	if (a - b < 0) return a - b + mod;
	return a - b;
}
int binpow(int a, int b)
{
	int res = 1;
	while (b)
	{
		if (b & 1)res = mul(res, a);
		a = mul(a, a);
		b >>= 1;
	}
	return res;
}
int inv(int x)
{
	return binpow(x, mod - 2);
}
int fact[MAXN]; int rfact[MAXN];
int cnk(int n, int k)
{
	if (k<0 || k>n) return 0;
	return mul(fact[n], mul(rfact[k], rfact[n - k]));
}

void init()
{
	fact[0] = 1;
	for (int i = 1; i < MAXN; ++i) fact[i] = mul(fact[i - 1], i);
	rfact[MAXN - 1] = inv(fact[MAXN - 1]);
	for (int i = MAXN - 2; i >= 0; --i)rfact[i] = mul(rfact[i + 1], i + 1);
}
